name: Sync Projects to Main Branch

on:
  push:
    branches: [ project ]
    paths: [ 'projects.json' ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  sync-projects:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Check current branch and files
      run: |
        echo "Current branch: $(git branch --show-current)"
        echo "Files in root:"
        ls -la
        echo "Checking for projects.json:"
        if [ -f "projects.json" ]; then
          echo "✅ projects.json found"
        else
          echo "❌ projects.json not found"
          exit 1
        fi
        
    - name: Generate README content
      run: |
        echo "🔄 Generating README content..."
        cat > generate-readme.js << 'SCRIPT_END'
        const fs = require('fs');
        try {
            const projectsData = JSON.parse(fs.readFileSync('projects.json', 'utf8'));
            const readmeContent = `个人业余开发项目清单

|                              名称                               | 简介                                         | 链接                                                                                                                        | 备注                     |
| :-----------------------------------------------------------: | ------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------- | ---------------------- |
${projectsData.map(project => {
    const name = project.name;
    const description = project.description || '';
    const year = project.year || '';
    const tags = project.tags ? project.tags.join('` `') : '';
    const links = [];
    if (project.links.github) {
        links.push(`[Git](${project.links.github})`);
    }
    if (project.links.main) {
        links.push(`[入口](${project.links.main})`);
    }
    if (project.links.docs) {
        links.push(`[Docs](${project.links.docs})`);
    }
    if (project.links.article) {
        links.push(`[介绍文章](${project.links.article})`);
    }
    const linkStr = links.join(' ');
    const tagStr = tags ? `\`SINCE ${year}\` \`${tags}\`` : `\`SINCE ${year}\``;
    return `| ${project.links.main ? `[${name}](${project.links.main})` : name} | ${description} | ${linkStr} | ${tagStr} |`;
}).join('\n')}

`;
            fs.writeFileSync('README_new.md', readmeContent);
            console.log('✅ README generated successfully');
        } catch (error) {
            console.error('❌ Error generating README:', error);
            process.exit(1);
        }
        SCRIPT_END
        node generate-readme.js
        
    - name: Switch to main branch and update README
      run: |
        echo "🔄 Switching to main branch..."
        git checkout main
        echo "📝 Copying new README..."
        cp README_new.md README.md
        rm README_new.md generate-readme.js
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        if git diff --quiet HEAD -- README.md; then
          echo "ℹ️  No changes to README.md"
        else
          echo "🚀 Updating README.md with latest project data"
          git add README.md
          git commit -m "🤖 自动同步项目清单到 README.md

由 GitHub Action 自动生成，基于 project 分支的 projects.json 文件

Generated at: $(date '+%Y-%m-%d %H:%M:%S UTC')"
          git push origin main
          echo "✅ README.md updated successfully"
        fi