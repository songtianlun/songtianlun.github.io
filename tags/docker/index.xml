<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>docker on Frytea</title>
    <link>https://www.frytea.com/tags/docker/</link>
    <description>Recent content in docker on Frytea</description>
    <image>
      <url>https://www.frytea.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://www.frytea.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 08 Mar 2022 14:43:39 +0800</lastBuildDate><atom:link href="https://www.frytea.com/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>k3s 使用 Letsencrypt 和 Traefik 完成 https 入口部署</title>
      <link>https://www.frytea.com/technology/k8s/k3s-uses-letsencrypt-and-traefik-to-deploy-the-https/</link>
      <pubDate>Tue, 08 Mar 2022 14:43:39 +0800</pubDate>
      
      <guid>https://www.frytea.com/technology/k8s/k3s-uses-letsencrypt-and-traefik-to-deploy-the-https/</guid>
      <description>k3s自动完成 ssl 证书签发和续签方法，并使用 https 协议暴露服务方法介绍。</description>
    </item>
    
    <item>
      <title>公网部署 k3s 集群方法总结</title>
      <link>https://www.frytea.com/technology/k8s/k3s-deployment-on-public-network/</link>
      <pubDate>Tue, 08 Mar 2022 14:36:35 +0800</pubDate>
      
      <guid>https://www.frytea.com/technology/k8s/k3s-deployment-on-public-network/</guid>
      <description>基于公网完成跨云厂商服务器 k3s 集群部署</description>
    </item>
    
    <item>
      <title>Kubernetes Pod 配置文件(完整注释)</title>
      <link>https://www.frytea.com/technology/k8s/kubernetes-all-yaml/</link>
      <pubDate>Fri, 04 Feb 2022 13:06:26 +0800</pubDate>
      
      <guid>https://www.frytea.com/technology/k8s/kubernetes-all-yaml/</guid>
      <description>汇集几乎全部 k8s 配置项注释，方便查阅和学习</description>
    </item>
    
    <item>
      <title>kubernetes 核心技术概念</title>
      <link>https://www.frytea.com/technology/k8s/kubernetes-core-concept/</link>
      <pubDate>Fri, 04 Feb 2022 13:04:34 +0800</pubDate>
      
      <guid>https://www.frytea.com/technology/k8s/kubernetes-core-concept/</guid>
      <description>汇集 k8s 核心概念，帮助理解</description>
    </item>
    
    <item>
      <title>Kubernetes 系列文章概述</title>
      <link>https://www.frytea.com/technology/k8s/kubernetes-abstract/</link>
      <pubDate>Fri, 04 Feb 2022 13:02:37 +0800</pubDate>
      
      <guid>https://www.frytea.com/technology/k8s/kubernetes-abstract/</guid>
      <description>Kubernetes系列文章概述</description>
    </item>
    
    <item>
      <title>深挖 docker 默认网络 | 为什么 docker 默认网络能上外网</title>
      <link>https://www.frytea.com/posts/essay/612/</link>
      <pubDate>Tue, 28 Dec 2021 14:49:46 +0000</pubDate>
      
      <guid>https://www.frytea.com/posts/essay/612/</guid>
      <description>为什么默认配置创建出来的 docker 容器可以访问外网，为什么监听对应端口就能对外暴露docker服务，一张图搞清楚。 首先 Docker 有四中网络模式， 分别是 Bri</description>
    </item>
    
    <item>
      <title>云原生初体验 ｜ 使用 3C 活动服务器体验 KubeSphere</title>
      <link>https://www.frytea.com/technology/k8s/initial-cloud-native-experience-kubesphere-with-3c-server/</link>
      <pubDate>Tue, 07 Dec 2021 23:49:51 +0800</pubDate>
      
      <guid>https://www.frytea.com/technology/k8s/initial-cloud-native-experience-kubesphere-with-3c-server/</guid>
      <description>记录对云原生的初体验，顺带测评 3C云活动价服务器.</description>
    </item>
    
    <item>
      <title>从零构建 Docker 镜像 | 申威下从零构建 debian 并打包为 docker</title>
      <link>https://www.frytea.com/technology/docker/build-docker-from-scratch-based-on-deboostrap/</link>
      <pubDate>Thu, 02 Dec 2021 10:24:39 +0800</pubDate>
      
      <guid>https://www.frytea.com/technology/docker/build-docker-from-scratch-based-on-deboostrap/</guid>
      <description>基于 debootstrap 从零生成最小 debian 并制作 docker 镜像.</description>
    </item>
    
    <item>
      <title>从零构建 Docker 镜像 | 基于 busybox 制作 | 深入理解 Docker 镜像构建</title>
      <link>https://www.frytea.com/technology/docker/build-a-docker-image-from-scratch/</link>
      <pubDate>Fri, 26 Nov 2021 16:16:40 +0800</pubDate>
      
      <guid>https://www.frytea.com/technology/docker/build-a-docker-image-from-scratch/</guid>
      <description>基于 busybox 无依赖的构建带有基础 unix 工具集的 docker 镜像.</description>
    </item>
    
    <item>
      <title>把 FireFox 装进 Docker ｜ VPS/群晖 搭建『云端/内网 浏览器』</title>
      <link>https://www.frytea.com/technology/tips/setting-up-cloud-browser-using-vps/</link>
      <pubDate>Fri, 12 Nov 2021 23:54:19 +0800</pubDate>
      
      <guid>https://www.frytea.com/technology/tips/setting-up-cloud-browser-using-vps/</guid>
      <description>云端服务器安装远程浏览器。</description>
    </item>
    
    <item>
      <title>申威（神/声）（SW）1621 &#43; UOS 20 编译安装 Docker | 容器国产化适配</title>
      <link>https://www.frytea.com/posts/essay/598/</link>
      <pubDate>Wed, 10 Nov 2021 18:08:00 +0000</pubDate>
      
      <guid>https://www.frytea.com/posts/essay/598/</guid>
      <description>环境 OS: UOS 20 1021 12011.101 CPU: SW_64 SW1621 步骤 本地编译 runc 1.解压 runc 源码至 ~/go/src/github.com/opencontainers 目录； ~/go/ └── src └── github.com └── opencontainers └── runc 2.进入 runc 主目录，替换 vendor/golang.org/x/sys/unix 目录为申威平台 golang1.14.1 源码 go-sw64-1.14.1/src/cmd/vendor/golang.org/x/sys/unix 目</description>
    </item>
    
    <item>
      <title>申威（神/声）（SW）1621 &#43; UOS 20 编译安装 Docker | 容器国产化适配</title>
      <link>https://www.frytea.com/technology/docker/sw-1621-with-uos20-compiler-installed-docke/</link>
      <pubDate>Wed, 10 Nov 2021 10:18:19 +0000</pubDate>
      
      <guid>https://www.frytea.com/technology/docker/sw-1621-with-uos20-compiler-installed-docke/</guid>
      <description>申威处理器&#43;UOS操作系统下编译安装Docker服务.</description>
    </item>
    
    <item>
      <title>Centos系统安装docker</title>
      <link>https://www.frytea.com/posts/essay/37/</link>
      <pubDate>Tue, 12 Mar 2019 11:13:00 +0000</pubDate>
      
      <guid>https://www.frytea.com/posts/essay/37/</guid>
      <description>主要步骤 1、Docker 要求 CentOS 系统的内核版本高于 3.10 ，查看本页面的前提条件来验证你的CentOS 版本是否支持 Docker 。 通过 uname -r 命令查看你当前的内核版</description>
    </item>
    
  </channel>
</rss>
